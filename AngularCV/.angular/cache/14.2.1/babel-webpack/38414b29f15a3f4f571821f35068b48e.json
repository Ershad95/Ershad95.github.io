{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { GitComponent } from './git/git.component';\nimport { LinkedinComponent } from './linkedin/linkedin.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { CertificateComponent } from './certificate/certificate.component';\nimport { AparatComponent } from './aparat/aparat.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [FormsModule, BrowserModule, RouterModule.forRoot([{\n      path: \"home\",\n      component: HomeComponent\n    }, {\n      path: \"skillBadge\",\n      component: LinkedinComponent\n    }, {\n      path: \"git\",\n      component: GitComponent\n    }, {\n      path: \"contact\",\n      component: ContactComponent\n    }, {\n      path: \"certificate\",\n      component: CertificateComponent\n    }, {\n      path: \"aparat\",\n      component: AparatComponent\n    }, {\n      path: \"\",\n      redirectTo: \"/home\",\n      pathMatch: \"full\"\n    }, {\n      path: \"**\",\n      component: NotFoundComponent\n    }]), ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}